name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: r-devops-magistracy-project-2sem-idbolshakov
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

jobs:
  # Сборка и пуш образов в докерхаб:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          # Получение исходного кода из репозитория:
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          # Установка сборщика контейнеров Docker:
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          # Авторизация на Docker Hub:
          uses: docker/login-action@v2
          # При помощи with передаём в action параметры username и password:
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            # Хорошо ли держать логин и пароль прямо в коде workflow?
            # Нет, это нехорошо. Хранить пароль надо в Secrets.
        - name: Push Backend to DockerHub
          # Одновременный билд и пуш образа в Docker Hub:
          uses: docker/build-push-action@v4
          with:
            # Параметр context: ./backend/ указывает, что нужный Dockerfile 
            # находится в ./backend/
            context: ./backend/
            # Параметр push: true указывает, что образ нужно не только собрать,
            # но и отправить на Docker Hub:
            push: true
            # В параметре tags задаётся название и тег для образа.
            # Для каждого пересобранного образа 
            # устанавливаем тег latest, чтобы потом
            # на сервере и в docker-compose.yml не указывать версию образа:
            tags: idbolshakovstudy/sausage-backend:latest
            build-args: |
              VERSION=${{ github.sha }}
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: idbolshakovstudy/sausage-frontend:latest
        - name: Push Backend-report to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend-report/
            push: true
            tags: idbolshakovstudy/sausage-backend-report:latest
  # Упаковываем helm-чарт и пушим его в Nexus
  add_helm_chart_to_nexus:
      name: Add Helm Chart To Nexus
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub

      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.14.4
        - name: Set chart version label
          run: |
            VERSION=$(echo "${{ github.sha }}" | cut -c1-7)
            echo "Using version: $VERSION"
        - name: lint and package Helm chart
          run: |
            helm lint sausage-store-chart
            helm package sausage-store-chart --destination .
        - name: Upload chart to Nexus
          run: |
            CHART_FILE=$(ls -1 sausage-store-*.tgz | head -n 1)
            echo "Chart to upload: $CHART_FILE"
            curl -u "$NEXUS_HELM_REPO_USER:$NEXUS_HELM_REPO_PASSWORD" \
                 --upload-file "$CHART_FILE" \
                 "$NEXUS_HELM_REPO/"
            echo "Chart uploaded successfully"

  # Деплоим приложения в кластер Kubernetes с помощью helm-чарт
  deploy_helm_chart_to_kubernetes:
      name: Deploy Helm Chart To Kubernetes
      runs-on: ubuntu-latest
      needs: add_helm_chart_to_nexus
      env:
        HELM_DRIVER: configmap

      steps:
      #### Опишите необходимые шаги
        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.14.4
        - name: Add Nexus Helm repo
          run: |
            helm repo add nexus $NEXUS_HELM_REPO --username $NEXUS_HELM_REPO_USER --password $NEXUS_HELM_REPO_PASSWORD
            helm repo update
        - name: Configure kubeconfig
          run: |
            mkdir -p ~/.kube
            echo "$KUBE_CONFIG" > ~/.kube/config
            chmod 600 ~/.kube/config
        - name: Deploy sausage-store chart
          run: |
            helm upgrade --install sem-project nexus/sausage-store \
              --namespace $SAUSAGE_STORE_NAMESPACE \
              --version 0.1.0
